apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pass-transfer.fullname" . }}
  labels:
    {{- include "pass-transfer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pass-transfer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pass-transfer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pass-transfer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: MYSQL_HOST
              value: {{ include "pass-transfer.fullname" . }}-mysql
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "pass-transfer.fullname" . }}-mysql
                  key: database
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "pass-transfer.fullname" . }}-mysql
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "pass-transfer.fullname" . }}-mysql
                  key: password
            - name: DEBUG
              value: "{{ .Values.config.debug }}"
            - name: COMPANY_WHITELABEL
              value: "{{ .Values.config.companyWhitelabel }}"
            - name: WARNING_ONE_TIME_LINK
              value: "{{ .Values.config.warningOneTimeLink }}"
            - name: WARNING_CONFIRM_OPEN
              value: "{{ .Values.config.warningConfirmOpen }}"
            {{- if .Values.ingress.enabled }}
            - name: SITE_URL
              value: "{{ if .Values.ingress.tls }}https{{ else }}http{{ end }}://{{ (index .Values.ingress.hosts 0).host }}"
            {{- else }}
            - name: SITE_URL
              value: "http://localhost"
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
